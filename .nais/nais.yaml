apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  name: dp-behandling
  namespace: teamdagpenger
  labels:
    team: teamdagpenger
spec:
  image: "{{ image }}"
  port: 8080
  liveness:
    path: /isalive
  readiness:
    path: /isready
  prometheus:
    enabled: true
    path: /metrics
  replicas:
    min: 2
    max: 2
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 256Mi
  env:
    - name: GRUPPER_SAKSBEHANDLER
      value: {{azure.grupper.saksbehandler}}
    - name: flyway.cleanDisabled
      value: '{{flyway.cleanDisabled}}'
    - name: CLEAN_ON_STARTUP
      value: "false"
  envFrom:
    - secret: dp-behandling-unleash-api-token
  {{#if ingresses}}
  ingresses:
    {{#each ingresses as |url|}}
     - {{url}}
    {{/each}}
  {{/if}}
  secureLogs:
    enabled: true
  azure:
    application:
      enabled: true
      tenant: {{azure.tenant}}
      claims:
        extra:
          - NAVident
        groups:
          - id: {{azure.grupper.saksbehandler}}
          - id: {{azure.grupper.beslutter}}
  observability:
    autoInstrumentation:
      enabled: true
      runtime: java
  gcp:
    sqlInstances:
      - type: POSTGRES_15
        highAvailability: true
        diskAutoresize: true
        pointInTimeRecovery: true
        tier: {{gcp.sql.tier}}
        databases:
          - name: behandling
            envVarPrefix: DB
  kafka:
    pool: "{{ kafka_pool }}"
  accessPolicy:
    outbound:
      external:
        - host: teamdagpenger-unleash-api.nav.cloud.nais.io
    inbound:
      rules:
        - application: dp-saksbehandling-frontend
        {{#if wonderwalled}}
        - application: wonderwalled-idporten
          namespace: aura
        - application: wonderwalled-azure
          namespace: aura
        - application: azure-token-generator
          namespace: aura
        {{/if}}

